# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main
pool:
  name: default
stages:
- stage: Build 
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    variables:
      imageRegistry: quay.io'
      imageProject: zhangchl007
      myApp: spring-azure-demo
      tag: '$(Build.BuildId)'
      imagePullSecret: 'myquay1646e01f-auth'
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: BuildpacksInstaller@1
      inputs:
        buildpacksVersion: '0.26.0'
    - task: BuildpacksTask@1
      displayName: Buildpack Container Images
      inputs:
        command: 'build'
        imageName: '$(imageRegistry)/$(imageProject)/$(myApp):$(tag)'
        builder: 'paketobuildpacks/builder:base'
        projectPath: 'target/spring-azure-demo-0.0.1-SNAPSHOT.jar'
        pullPolicy: 'always'
    - task: Docker@2
      displayName: Push Container Image
      inputs:
        containerRegistry: 'myquay'
        repository: '$(imageProject)/$(myApp)'
        command: 'push'
    - upload: manifests
      artifact: manifests
- stage: Deploy
  displayName: Deploy stage
  variables:
    k8sImage: '$(imageRegistry)/$(imageProject)/$(myApp):$(tag)'
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'spring-azure-demo'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'mydemo_aks'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(imagePullSecret)'
              dockerRegistryEndpoint: 'myquay'
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              connectionType: 'azureResourceManager'
              azureSubscriptionConnection: 'myazure'
              azureResourceGroup: 'rg-aks-demo'
              kubernetesCluster: 'aks-devops-demo'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              containers: '$(imageRegistry)/$(imageProject)/$(myApp):$(tag)'
              imagePullSecrets: '$(imagePullSecret)'
